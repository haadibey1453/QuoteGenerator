@page "/add-product"
@page "/add-product/{productId}"
@rendermode InteractiveServer
<PageTitle>Add Product</PageTitle>

<div class="container">
    <div class="row d-flex justify-content-center">
        <div class="col-lg-6">
            <form class="card p-3">
                <div class="form-group">
                    <label for="exampleInputName"><b>Product Name</b></label>
                    <input type="text" class="form-control mt-2" @bind-value="newProduct.Name" placeholder="Enter Name" required>
                </div>
                <div class="form-group">
                    <label for="exampleInputName"><b>Product Price</b></label>
                    <input type="number" class="form-control mt-2" @bind-value="newProduct.Price" placeholder="Enter Price" required>
                </div>
                <div class="form-group">
                    <label for="exampleInputName"><b>Category</b></label>
                    <select class="form-select" @onchange="HandleSelect">
                        <option value="#">Select Category</option>
                        @foreach (var category in categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                </div>
                <button type="submit" class="btn btn-success mt-2" @onclick="Submit">Save</button>
            </form>
        </div>
    </div>
    <div class="row d-flex justify-content-center mt-3">
        <div class="col-lg-6">
            <a class="btn btn-primary" href="product">View Products</a>
        </div>
    </div>
</div>
@if (ToastMessage!=null)
{
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="alert alert-success" role="alert">
                    @ToastMessage
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Inject] protected Models.DatabaseContext db { get; set; }
    [Parameter] public string productId { get; set; }

    protected Models.Product newProduct = new();
    protected List<Models.Category> categories = new();

    protected string ToastMessage;
    protected int productIdInt;
    protected int i;




    protected override void OnInitialized()
    {
        productIdInt = Convert.ToInt32(productId);
        categories = db.Categories.ToList();
        base.OnInitialized();
    }

    protected void Submit()
    {
        if (isValid())
        {
            if (productIdInt != 0)
            {
                db.Products.Update(newProduct);
                i = db.SaveChanges();
                ToastMessage = "Product Updated!";
            }
            else
            {
                db.Products.Add(newProduct);
                i = db.SaveChanges();
                ToastMessage = "Product Added!";
            }
        }
    }

    protected void HandleSelect(ChangeEventArgs e)
    {
        newProduct.CategoryId = Convert.ToInt32(e.Value.ToString());
    }

    protected bool isValid()
    {
        if (newProduct.Name != null || newProduct.Price != 0 || newProduct.CategoryId != 0)
            return true;
        else
            return false;
    }
}
